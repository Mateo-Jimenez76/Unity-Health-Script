name: Update CHANGELOG on push to main
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  update-changelog:
    # avoid running when the actor is the actions bot (prevents loop)
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update CHANGELOG
        env:
          BEFORE: ${{ github.event.before }}
          AFTER: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Change this path if your changelog lives in your package folder:
          CHANGELOG_PATH: CHANGELOG.md
        run: |
          set -euo pipefail

          BEFORE=${BEFORE:-}
          AFTER=${AFTER:-}
          CHANGELOG_FILE="${CHANGELOG_PATH:-CHANGELOG.md}"

          # Compute range (handle initial commit)
          if [[ -z "$BEFORE" || "$BEFORE" =~ ^0+$ ]]; then
            RANGE="$AFTER"
          else
            RANGE="$BEFORE..$AFTER"
          fi

          # Collect commits, skip merges
          # Format: short-hash|||subject|||author
          raw_commits=$(git log --no-merges --pretty=format:'%h|||%s|||%an' "$RANGE" || true)

          if [[ -z "$raw_commits" ]]; then
            echo "No commits to add to changelog."
            exit 0
          fi

          declare -A sections
          sections["Added"]=""
          sections["Changed"]=""
          sections["Deprecated"]=""
          sections["Removed"]=""
          sections["Fixed"]=""
          sections["Security"]=""
          sections["Other"]=""

          # Helper: map conventional commit type to Keep-a-Changelog section
          map_type_to_section() {
            local t="$1"
            case "$t" in
              feat) echo "Added" ;;
              fix) echo "Fixed" ;;
              perf) echo "Changed" ;;
              refactor) echo "Changed" ;;
              docs) echo "Changed" ;;
              chore) echo "Other" ;;
              style) echo "Other" ;;
              test) echo "Other" ;;
              deprecate|deprecated) echo "Deprecated" ;;
              remove|removed) echo "Removed" ;;
              security) echo "Security" ;;
              *) echo "Other" ;;
            esac
          }

          # Build entries
          while IFS= read -r line; do
            # split components
            IFS='|||' read -r short subject author <<< "$line"

            # try to parse conventional commit: type(scope)?: subject
            if [[ "$subject" =~ ^([a-zA-Z0-9_-]+)(\([^)]+\))?:[[:space:]]*(.*) ]]; then
              type="${BASH_REMATCH[1]}"
              desc="${BASH_REMATCH[3]}"
              section=$(map_type_to_section "$type")
            else
              desc="$subject"
              section="Other"
            fi

            entry="- ${desc} — ${author} (${short})"
            sections["$section"]+="${entry}\n"
          done <<< "$raw_commits"

          # Build the Unreleased block with only non-empty sections
          DATE=$(date -u +"%Y-%m-%d")
          new_block="## Unreleased — ${DATE}\n\n"

          for sec in "Added" "Changed" "Deprecated" "Removed" "Fixed" "Security" "Other"; do
            if [[ -n "${sections[$sec]}" ]]; then
              new_block+=$(printf "### %s\n\n%s\n" "$sec" "$(echo -e "${sections[$sec]}" | sed '/^\s*$/d')")
            fi
          done

          new_block="${new_block}\n"

          # Create or prepend to CHANGELOG_FILE
          if [[ -f "$CHANGELOG_FILE" ]]; then
            tmp=$(mktemp)
            printf "%b\n" "$new_block" > "$tmp"
            cat "$CHANGELOG_FILE" >> "$tmp"
            mv "$tmp" "$CHANGELOG_FILE"
          else
            printf "%b\n" "$new_block" > "$CHANGELOG_FILE"
          fi

          # Commit and push
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add "$CHANGELOG_FILE"
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "chore(changelog): update for push ${AFTER}"
          # If push is blocked by branch protection, this push will fail.
          git push origin HEAD:main
